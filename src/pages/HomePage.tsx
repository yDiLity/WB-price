import { useState, useEffect } from 'react';
import {
  Box,
  Container,
  Heading,
  Text,
  SimpleGrid,
  Flex,
  VStack,
  HStack,
  Button,
  Icon,
  useColorModeValue,
  Card,
  CardBody,
  Stat,
  StatLabel,
  StatNumber,
  StatHelpText,
  Badge,
  Tooltip,
  Circle,
} from '@chakra-ui/react';
import {
  FaChartLine,
  FaRocket,
  FaUsers,
  FaMoneyBillWave,
  FaArrowRight,
} from 'react-icons/fa';
import { Link } from 'react-router-dom';
import { useAnalytics } from '../services/analytics';



// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é shimmer –≤ head
const shimmerCSS = `
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head –¥–æ–∫—É–º–µ–Ω—Ç–∞
if (typeof document !== 'undefined') {
  const style = document.createElement('style');
  style.textContent = shimmerCSS;
  document.head.appendChild(style);
}

const HomePage = () => {
  const [isLoaded, setIsLoaded] = useState(false);
  const [activeFeature, setActiveFeature] = useState(0);
  const [stats, setStats] = useState({
    users: 1000,
    profit: 30,
    monitoring: 24,
    sales: 2400000,
    products: 1247
  });

  const analytics = useAnalytics();
  const bgColor = useColorModeValue('white', 'gray.800');
  const textColor = useColorModeValue('gray.600', 'gray.300');
  const borderColor = useColorModeValue('gray.200', 'gray.600');

  useEffect(() => {
    // –¢—Ä–µ–∫–∏–Ω–≥ –ø–æ—Å–µ—â–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    analytics.page('Home Page', {
      feature: 'homepage',
      section: 'hero',
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    const timer = setTimeout(() => setIsLoaded(true), 500);

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const featureTimer = setInterval(() => {
      setActiveFeature(prev => (prev + 1) % 4);
    }, 3000);

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const statsTimer = setInterval(() => {
      setStats(prev => ({
        users: prev.users + Math.floor(Math.random() * 5),
        profit: prev.profit + (Math.random() - 0.5) * 0.1,
        monitoring: 24,
        sales: prev.sales + Math.floor(Math.random() * 10000),
        products: prev.products + Math.floor(Math.random() * 3),
      }));
    }, 5000);

    return () => {
      clearTimeout(timer);
      clearInterval(featureTimer);
      clearInterval(statsTimer);
    };
  }, [analytics]);

  return (
    <Box bg={bgColor} minH="100vh">
      <Container maxW="container.xl" py={12}>
        {/* Hero Section */}
        <Flex
          direction={{ base: 'column', lg: 'row' }}
          align="center"
          justify="space-between"
          mb={16}
          gap={12}
        >
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Ç–µ–∫—Å—Ç */}
          <VStack align="flex-start" spacing={6} flex="1" maxW={{ base: '100%', lg: '50%' }}>
            <Badge colorScheme="blue" px={4} py={2} borderRadius="full" fontSize="sm" className="purple-border">
              üöÄ Ozon Price Optimizer Pro
            </Badge>

            <Heading
              as="h1"
              size="2xl"
              lineHeight="shorter"
              bgGradient={useColorModeValue(
                "linear(to-r, blue.600, purple.600, teal.600)",
                "linear(to-r, blue.300, purple.300, teal.300)"
              )}
              bgClip="text"
              fontWeight="extrabold"
              sx={{
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
                backgroundClip: 'text'
              }}
            >
              –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–ª—è Ozon
            </Heading>

            <Text fontSize="xl" color={textColor} lineHeight="tall">
              –£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–∏–±—ã–ª—å –Ω–∞ <Text as="span" color={useColorModeValue("green.600", "green.300")} fontWeight="bold">30%</Text> —Å –ø–æ–º–æ—â—å—é —É–º–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.
              <Text as="span" color={useColorModeValue("blue.600", "blue.300")} fontWeight="semibold">–ò–ò-–∞–Ω–∞–ª–∏–∑</Text> –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω –∏ <Text as="span" color={useColorModeValue("purple.600", "purple.300")} fontWeight="semibold">–∑–∞—â–∏—Ç–∞ –æ—Ç –¥–µ–º–ø–∏–Ω–≥–∞</Text>.
            </Text>

            <HStack spacing={4}>
              <Button
                as={Link}
                to="/dashboard"
                size="lg"
                colorScheme="blue"
                rightIcon={<FaArrowRight />}
                px={8}
                className="purple-button-border"
                _hover={{
                  transform: "translateY(-2px)",
                  boxShadow: "lg"
                }}
                transition="all 0.2s"
              >
                –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
              </Button>
              <Button
                as={Link}
                to="/about"
                size="lg"
                variant="outline"
                colorScheme="blue"
                px={8}
                className="purple-button-border"
                _hover={{
                  transform: "translateY(-2px)",
                  boxShadow: "lg"
                }}
                transition="all 0.2s"
              >
                –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
              </Button>
            </HStack>

            {/* –ñ–∏–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <HStack spacing={8} pt={4}>
              <Tooltip label="–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã" hasArrow>
                <VStack
                  spacing={1}
                  cursor="pointer"
                  transition="all 0.3s ease"
                  _hover={{ transform: 'scale(1.05)' }}
                  onClick={() => analytics.interaction('stat_click', 'users')}
                >
                  <Text
                    fontSize="2xl"
                    fontWeight="bold"
                    color={useColorModeValue("blue.600", "blue.300")}
                    sx={isLoaded ? { animation: 'fadeIn 1s ease-in' } : {}}
                  >
                    {stats.users.toLocaleString()}+
                  </Text>
                  <Text fontSize="sm" color={textColor}>–ü—Ä–æ–¥–∞–≤—Ü–æ–≤</Text>
                </VStack>
              </Tooltip>

              <Tooltip label="–°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤" hasArrow>
                <VStack
                  spacing={1}
                  cursor="pointer"
                  transition="all 0.3s ease"
                  _hover={{ transform: 'scale(1.05)' }}
                  onClick={() => analytics.interaction('stat_click', 'profit')}
                >
                  <Text
                    fontSize="2xl"
                    fontWeight="bold"
                    color={useColorModeValue("green.600", "green.300")}
                    sx={isLoaded ? { animation: 'fadeIn 1.2s ease-in' } : {}}
                  >
                    {stats.profit.toFixed(1)}%
                  </Text>
                  <Text fontSize="sm" color={textColor}>–†–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏</Text>
                </VStack>
              </Tooltip>

              <Tooltip label="–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω" hasArrow>
                <VStack
                  spacing={1}
                  cursor="pointer"
                  transition="all 0.3s ease"
                  _hover={{ transform: 'scale(1.05)' }}
                  onClick={() => analytics.interaction('stat_click', 'monitoring')}
                >
                  <Text
                    fontSize="2xl"
                    fontWeight="bold"
                    color={useColorModeValue("purple.600", "purple.300")}
                    sx={isLoaded ? { animation: 'fadeIn 1.4s ease-in' } : {}}
                  >
                    24/7
                  </Text>
                  <Text fontSize="sm" color={textColor}>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</Text>
                </VStack>
              </Tooltip>
            </HStack>


          </VStack>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –¥–∏–∞–≥—Ä–∞–º–º–∞ */}
          <Box flex="1" maxW={{ base: '100%', lg: '45%' }}>
            <Card
              bg={bgColor}
              borderColor={borderColor}
              borderWidth="1px"
              boxShadow="xl"
              className="purple-card-border"
              _hover={{
                boxShadow: "2xl",
                transform: "translateY(-2px)"
              }}
              transition="all 0.3s ease"
            >
              <CardBody p={6}>
                <VStack spacing={4}>
                  <Heading
                    size="md"
                    color={useColorModeValue('gray.800', 'white')}
                  >
                    üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂
                  </Heading>

                  {/* üåà –ö–†–ê–°–ò–í–ê–Ø –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –î–ò–ê–ì–†–ê–ú–ú–ê –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò */}
                  <Box w="100%" h="250px" position="relative" bg={useColorModeValue("gray.50", "gray.700")} borderRadius="xl" p={4}>
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∏–∞–≥—Ä–∞–º–º—ã */}
                    <Flex justify="space-between" align="center" mb={4}>
                      <Text fontSize="sm" fontWeight="bold" color={textColor}>
                        üìà –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂
                      </Text>
                      <Badge colorScheme="green" variant="subtle" fontSize="xs">
                        +15.3% –∫ –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–µ
                      </Badge>
                    </Flex>

                    {/* –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ */}
                    <Flex h="160px" align="end" justify="space-around" px={2} position="relative">
                      {[
                        { height: 45, value: "‚ÇΩ125K", day: "–ü–ù", color: useColorModeValue("#FF6B35", "#FF8A65"), sales: 125, trend: "up" },
                        { height: 60, value: "‚ÇΩ180K", day: "–í–¢", color: useColorModeValue("#4ECDC4", "#4DB6AC"), sales: 180, trend: "up" },
                        { height: 85, value: "‚ÇΩ245K", day: "–°–†", color: useColorModeValue("#45B7D1", "#42A5F5"), sales: 245, trend: "up" },
                        { height: 70, value: "‚ÇΩ210K", day: "–ß–¢", color: useColorModeValue("#96CEB4", "#81C784"), sales: 210, trend: "down" },
                        { height: 95, value: "‚ÇΩ285K", day: "–ü–¢", color: useColorModeValue("#FFEAA7", "#FFD54F"), sales: 285, trend: "up" },
                        { height: 80, value: "‚ÇΩ230K", day: "–°–ë", color: useColorModeValue("#DDA0DD", "#BA68C8"), sales: 230, trend: "down" },
                        { height: 90, value: "‚ÇΩ265K", day: "–í–°", color: useColorModeValue("#98D8C8", "#4DD0E1"), sales: 265, trend: "up" }
                      ].map((bar, index) => (
                        <Tooltip
                          key={index}
                          label={
                            <VStack spacing={1} align="start">
                              <Text fontWeight="bold">{bar.day}</Text>
                              <Text>üí∞ –í—ã—Ä—É—á–∫–∞: {bar.value}</Text>
                              <Text>üì¶ –ó–∞–∫–∞–∑–æ–≤: {bar.sales}</Text>
                              <Text>üìà –¢—Ä–µ–Ω–¥: {bar.trend === 'up' ? '‚ÜóÔ∏è –†–æ—Å—Ç' : '‚ÜòÔ∏è –°–Ω–∏–∂–µ–Ω–∏–µ'}</Text>
                            </VStack>
                          }
                          hasArrow
                          placement="top"
                          bg={useColorModeValue("white", "gray.800")}
                          color={useColorModeValue("gray.800", "white")}
                          borderColor={bar.color}
                          borderWidth="2px"
                        >
                          <VStack
                            spacing={1}
                            cursor="pointer"
                            opacity={isLoaded ? 1 : 0}
                            transform={isLoaded ? 'translateY(0)' : 'translateY(20px)'}
                            transition={`all 0.6s ease ${index * 0.1}s`}
                          >
                            <Box
                              w="32px"
                              h={isLoaded ? `${bar.height}%` : '0%'}
                              borderRadius="lg"
                              transition="all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275)"
                              transitionDelay={`${index * 0.1}s`}
                              position="relative"
                              overflow="hidden"
                              _hover={{
                                transform: 'scale(1.2) translateY(-12px)',
                                boxShadow: `0 15px 40px ${bar.color}70`,
                                zIndex: 10
                              }}
                              background={`linear-gradient(180deg, ${bar.color} 0%, ${bar.color}90 30%, ${bar.color}60 70%, ${bar.color}30 100%)`}
                              border="3px solid"
                              borderColor={bar.color}
                              boxShadow={`0 4px 15px ${bar.color}40`}
                              _before={{
                                content: '""',
                                position: 'absolute',
                                top: 0,
                                left: 0,
                                right: 0,
                                bottom: 0,
                                background: `linear-gradient(45deg, transparent 30%, ${bar.color}30 50%, transparent 70%)`,
                                animation: 'shimmer 3s infinite',
                                borderRadius: 'lg'
                              }}
                              _after={{
                                content: '""',
                                position: 'absolute',
                                top: '-2px',
                                left: '50%',
                                transform: 'translateX(-50%)',
                                width: '6px',
                                height: '6px',
                                borderRadius: 'full',
                                background: bar.trend === 'up' ? '#22C55E' : '#EF4444',
                                boxShadow: `0 0 10px ${bar.trend === 'up' ? '#22C55E' : '#EF4444'}`
                              }}
                            />
                            <Text
                              fontSize="xs"
                              fontWeight="bold"
                              color={textColor}
                              transition="all 0.3s ease"
                              _groupHover={{ color: bar.color, transform: 'scale(1.1)' }}
                            >
                              {bar.day}
                            </Text>
                          </VStack>
                        </Tooltip>
                      ))}
                    </Flex>

                    {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                    <Flex justify="space-between" align="center" mt={4} pt={3} borderTop="1px solid" borderColor={borderColor}>
                      <HStack spacing={4}>
                        <HStack spacing={1}>
                          <Circle size="8px" bg="green.400" />
                          <Text fontSize="xs" color={textColor}>–†–æ—Å—Ç</Text>
                        </HStack>
                        <HStack spacing={1}>
                          <Circle size="8px" bg="orange.400" />
                          <Text fontSize="xs" color={textColor}>–°—Ç–∞–±–∏–ª—å–Ω–æ</Text>
                        </HStack>
                      </HStack>
                      <Text fontSize="xs" color={textColor} fontWeight="medium">
                        –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ‚ÇΩ1,247
                      </Text>
                    </Flex>
                  </Box>

                  <SimpleGrid columns={2} spacing={4} w="100%">
                    <Tooltip label="–û–±—â–∏–π –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∫–ª–∏–µ–Ω—Ç–æ–≤" hasArrow>
                      <Stat textAlign="center" cursor="pointer" transition="all 0.3s ease" _hover={{ transform: 'scale(1.02)' }}>
                        <StatLabel color={textColor}>–ü—Ä–æ–¥–∞–∂–∏</StatLabel>
                        <StatNumber
                          bgGradient={useColorModeValue(
                            "linear(to-r, orange.500, orange.600)",
                            "linear(to-r, orange.300, orange.400)"
                          )}
                          bgClip="text"
                          sx={{
                            WebkitBackgroundClip: 'text',
                            WebkitTextFillColor: 'transparent'
                          }}
                        >
                          ‚ÇΩ{(stats.sales / 1000000).toFixed(1)}M
                        </StatNumber>
                        <StatHelpText color={useColorModeValue("green.600", "green.300")}>
                          +12% –∑–∞ –Ω–µ–¥–µ–ª—é
                        </StatHelpText>
                      </Stat>
                    </Tooltip>

                    <Tooltip label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ" hasArrow>
                      <Stat textAlign="center" cursor="pointer" transition="all 0.3s ease" _hover={{ transform: 'scale(1.02)' }}>
                        <StatLabel color={textColor}>–¢–æ–≤–∞—Ä—ã</StatLabel>
                        <StatNumber
                          bgGradient={useColorModeValue(
                            "linear(to-r, blue.500, blue.600)",
                            "linear(to-r, blue.300, blue.400)"
                          )}
                          bgClip="text"
                          sx={{
                            WebkitBackgroundClip: 'text',
                            WebkitTextFillColor: 'transparent'
                          }}
                        >
                          {stats.products.toLocaleString()}
                        </StatNumber>
                        <StatHelpText color={useColorModeValue("green.600", "green.300")}>
                          +5% –∑–∞ –Ω–µ–¥–µ–ª—é
                        </StatHelpText>
                      </Stat>
                    </Tooltip>
                  </SimpleGrid>
                </VStack>
              </CardBody>
            </Card>
          </Box>
        </Flex>

        {/* –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
        <VStack spacing={8} mb={16}>
          <Heading
            as="h2"
            size="xl"
            textAlign="center"
            bgGradient={useColorModeValue(
              "linear(to-r, blue.600, purple.600, teal.600)",
              "linear(to-r, blue.300, purple.300, teal.300)"
            )}
            bgClip="text"
            fontWeight="bold"
            sx={{
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              backgroundClip: 'text'
            }}
          >
            ‚ú® –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ‚ú®
          </Heading>

          <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={6} w="100%">
            <Tooltip label="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–± –ò–ò-–∞–Ω–∞–ª–∏–∑–µ" hasArrow>
              <Card
                bg={bgColor}
                borderColor={borderColor}
                borderWidth="1px"
                boxShadow="md"
                cursor="pointer"
                className="purple-card-border"
                _hover={{
                  transform: 'translateY(-8px)',
                  boxShadow: '2xl',
                  borderColor: useColorModeValue("orange.300", "orange.500"),
                  bg: useColorModeValue("orange.50", "orange.900")
                }}
                transition="all 0.4s ease"
                onClick={() => {
                  analytics.interaction('feature_click', 'ai_analysis');
                  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
                }}
                sx={activeFeature === 0 ? {
                  borderColor: useColorModeValue("orange.400", "orange.500"),
                  boxShadow: 'lg',
                  bg: useColorModeValue("orange.50", "orange.900")
                } : {}}
              >
                <CardBody textAlign="center" p={6}>
                  <Box color="#FF6B35" mb={4}>
                    <Icon
                      as={FaChartLine}
                      boxSize={12}
                      sx={{
                        color: "#FF6B35 !important",
                        fill: "#FF6B35 !important",
                        stroke: "#FF6B35 !important"
                      }}
                      transition="all 0.3s ease"
                      _hover={{ transform: 'scale(1.1) rotate(5deg)' }}
                    />
                  </Box>
                  <Heading size="md" mb={2} sx={{ color: "#FF6B35 !important" }}>ü§ñ –ò–ò-–∞–Ω–∞–ª–∏–∑</Heading>
                  <Text sx={{ color: "#FF6B35 !important", fontWeight: "600" }} fontSize="sm">
                    –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ <Text as="span" sx={{ color: "#FF6B35 !important" }} fontWeight="bold">–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω</Text>
                  </Text>
                  {activeFeature === 0 && (
                    <Badge colorScheme="orange" variant="solid" mt={2} fontSize="xs">
                      –ü–æ–ø—É–ª—è—Ä–Ω–æ
                    </Badge>
                  )}
                </CardBody>
              </Card>
            </Tooltip>

            <Tooltip label="–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–æ–¥–∞–∂" hasArrow>
              <Card
                bg={bgColor}
                borderColor={borderColor}
                borderWidth="1px"
                boxShadow="md"
                cursor="pointer"
                className="purple-card-border"
                _hover={{
                  transform: 'translateY(-8px)',
                  boxShadow: '2xl',
                  borderColor: useColorModeValue("blue.300", "blue.500"),
                  bg: useColorModeValue("blue.50", "blue.900")
                }}
                transition="all 0.4s ease"
                onClick={() => {
                  analytics.interaction('feature_click', 'automation');
                }}
                sx={activeFeature === 1 ? {
                  borderColor: useColorModeValue("blue.400", "blue.500"),
                  boxShadow: 'lg',
                  bg: useColorModeValue("blue.50", "blue.900")
                } : {}}
              >
                <CardBody textAlign="center" p={6}>
                  <Box color="#4A90E2" mb={4}>
                    <Icon
                      as={FaRocket}
                      boxSize={12}
                      sx={{
                        color: "#4A90E2 !important",
                        fill: "#4A90E2 !important",
                        stroke: "#4A90E2 !important"
                      }}
                      transition="all 0.3s ease"
                      _hover={{ transform: 'scale(1.1) rotate(-5deg)' }}
                    />
                  </Box>
                  <Heading size="md" mb={2} sx={{ color: "#4A90E2 !important" }}>‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</Heading>
                  <Text sx={{ color: "#4A90E2 !important", fontWeight: "600" }} fontSize="sm">
                    <Text as="span" sx={{ color: "#4A90E2 !important" }} fontWeight="bold">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ</Text> —Ü–µ–Ω –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º
                  </Text>
                  {activeFeature === 1 && (
                    <Badge colorScheme="blue" variant="solid" mt={2} fontSize="xs">
                      –≠–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è
                    </Badge>
                  )}
                </CardBody>
              </Card>
            </Tooltip>

            <Card
              bg={bgColor}
              borderColor={borderColor}
              borderWidth="1px"
              boxShadow="md"
              className="purple-card-border"
              _hover={{
                transform: 'translateY(-4px)',
                boxShadow: 'xl',
                borderColor: useColorModeValue("green.300", "green.500")
              }}
              transition="all 0.3s ease"
            >
              <CardBody textAlign="center" p={6}>
                <Box color="#28A745" mb={4}>
                  <Icon as={FaMoneyBillWave} boxSize={12} sx={{
                    color: "#28A745 !important",
                    fill: "#28A745 !important",
                    stroke: "#28A745 !important"
                  }} />
                </Box>
                <Heading size="md" mb={2} sx={{ color: "#28A745 !important" }}>üí∞ –ü—Ä–∏–±—ã–ª—å</Heading>
                <Text sx={{ color: "#28A745 !important", fontWeight: "600" }} fontSize="sm">
                  –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –¥–æ <Text as="span" sx={{ color: "#28A745 !important" }} fontWeight="bold">30%</Text> –∑–∞ –º–µ—Å—è—Ü
                </Text>
              </CardBody>
            </Card>

            <Card
              bg={bgColor}
              borderColor={borderColor}
              borderWidth="1px"
              boxShadow="md"
              className="purple-card-border"
              _hover={{
                transform: 'translateY(-4px)',
                boxShadow: 'xl',
                borderColor: useColorModeValue("purple.300", "purple.500")
              }}
              transition="all 0.3s ease"
            >
              <CardBody textAlign="center" p={6}>
                <Box color="#8E44AD" mb={4}>
                  <Icon as={FaUsers} boxSize={12} sx={{
                    color: "#8E44AD !important",
                    fill: "#8E44AD !important",
                    stroke: "#8E44AD !important"
                  }} />
                </Box>
                <Heading size="md" mb={2} sx={{ color: "#8E44AD !important" }}>üë• –°–æ–æ–±—â–µ—Å—Ç–≤–æ</Heading>
                <Text sx={{ color: "#8E44AD !important", fontWeight: "600" }} fontSize="sm">
                  –ê–∫—Ç–∏–≤–Ω–æ–µ <Text as="span" sx={{ color: "#8E44AD !important" }} fontWeight="bold">—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤</Text> –∏ –æ–±–º–µ–Ω –æ–ø—ã—Ç–æ–º
                </Text>
              </CardBody>
            </Card>
          </SimpleGrid>
        </VStack>

        {/* CTA Section */}
        <Card
          bg={useColorModeValue("blue.50", "blue.900")}
          borderColor={useColorModeValue("blue.200", "blue.600")}
          borderWidth="1px"
          boxShadow="md"
          className="purple-card-border"
          mb={16}
        >
          <CardBody textAlign="center" py={12}>
            <VStack spacing={6}>
              <Heading size="lg" color={useColorModeValue("blue.800", "blue.200")}>
                –ì–æ—Ç–æ–≤—ã —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏–±—ã–ª—å?
              </Heading>
              <Text fontSize="lg" color={useColorModeValue("blue.600", "blue.300")} maxW="2xl">
                –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ 1000+ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–∞—à —Å–µ—Ä–≤–∏—Å
              </Text>
              <Button
                as={Link}
                to="/register"
                size="lg"
                colorScheme="blue"
                px={12}
                py={6}
                fontSize="lg"
                className="purple-button-border"
              >
                –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </Button>
            </VStack>
          </CardBody>
        </Card>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ */}
        <Box py={12} borderTop="1px solid" borderColor={borderColor}>
          <VStack spacing={8} maxW="4xl" mx="auto">
            <Heading as="h2" size="xl" textAlign="center" color={useColorModeValue('gray.800', 'white')}>
              üöÄ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç Ozon Price Optimizer Pro?
            </Heading>

            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={8} w="100%">
              <VStack align="flex-start" spacing={4}>
                <Heading size="md" color="blue.600">üìä –£–º–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</Heading>
                <Text color={textColor} lineHeight="tall">
                  –ù–∞—à <Text as="span" color="blue.500" fontWeight="semibold">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç</Text> —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø—Ä–æ—Å–∞
                  –∏ <Text as="span" color="blue.500" fontWeight="semibold">–ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã</Text> –¥–ª—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–±—ã–ª–∏.
                </Text>

                <Heading size="md" color="green.600">‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</Heading>
                <Text color={textColor} lineHeight="tall">
                  –°–∏—Å—Ç–µ–º–∞ <Text as="span" color="green.500" fontWeight="semibold">–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω—è–µ—Ç —Ü–µ–Ω—ã</Text> —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º, —ç–∫–æ–Ω–æ–º—è —á–∞—Å—ã —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã
                  –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è <Text as="span" color="green.500" fontWeight="semibold">–º–≥–Ω–æ–≤–µ–Ω–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é</Text> –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä—ã–Ω–∫–∞.
                </Text>
              </VStack>

              <VStack align="flex-start" spacing={4}>
                <Heading size="md" color="purple.600">üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –±–∏–∑–Ω–µ—Å–∞</Heading>
                <Text color={textColor} lineHeight="tall">
                  –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º <Text as="span" color="purple.500" fontWeight="semibold">–¥–µ–º–ø–∏–Ω–≥, —Ñ–µ–π–∫–æ–≤—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã</Text> –∏ –Ω–∞–∫—Ä—É—Ç–∫—É –æ—Ç–∑—ã–≤–æ–≤. –ó–∞—â–∏—â–∞–µ–º –≤–∞—à –±–∏–∑–Ω–µ—Å –æ—Ç
                  –Ω–µ–¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º <Text as="span" color="purple.500" fontWeight="semibold">–∑–¥–æ—Ä–æ–≤—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ä–µ–¥—É</Text>.
                </Text>

                <Heading size="md" color="orange.600">üìà –†–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏</Heading>
                <Text color={textColor} lineHeight="tall">
                  –í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –ø—Ä–∏–±—ã–ª—å –Ω–∞ <Text as="span" color="orange.500" fontWeight="bold">30%</Text> –≤ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
                  <Text as="span" color="orange.500" fontWeight="semibold">–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã = –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂ = –≤—ã—à–µ –ø—Ä–∏–±—ã–ª—å</Text>.
                </Text>
              </VStack>
            </SimpleGrid>

            {/* –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã */}
            <Box w="100%" pt={8}>
              <Heading size="lg" textAlign="center" mb={8} color={useColorModeValue('gray.800', 'white')}>
                üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
              </Heading>

              <SimpleGrid columns={{ base: 1, md: 4 }} spacing={6}>
                <VStack spacing={3}>
                  <Box
                    w={16}
                    h={16}
                    bg="blue.500"
                    borderRadius="full"
                    display="flex"
                    alignItems="center"
                    justifyContent="center"
                    color="white"
                    fontSize="2xl"
                    fontWeight="bold"
                  >
                    1
                  </Box>
                  <Heading size="sm" textAlign="center">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</Heading>
                  <Text fontSize="sm" color={textColor} textAlign="center">
                    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç–µ —Å–≤–æ–π Ozon –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π API
                  </Text>
                </VStack>

                <VStack spacing={3}>
                  <Box
                    w={16}
                    h={16}
                    bg="green.500"
                    borderRadius="full"
                    display="flex"
                    alignItems="center"
                    justifyContent="center"
                    color="white"
                    fontSize="2xl"
                    fontWeight="bold"
                  >
                    2
                  </Box>
                  <Heading size="sm" textAlign="center">–ù–∞—Å—Ç—Ä–æ–π–∫–∞</Heading>
                  <Text fontSize="sm" color={textColor} textAlign="center">
                    –í—ã–±–∏—Ä–∞–µ—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
                  </Text>
                </VStack>

                <VStack spacing={3}>
                  <Box
                    w={16}
                    h={16}
                    bg="purple.500"
                    borderRadius="full"
                    display="flex"
                    alignItems="center"
                    justifyContent="center"
                    color="white"
                    fontSize="2xl"
                    fontWeight="bold"
                  >
                    3
                  </Box>
                  <Heading size="sm" textAlign="center">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</Heading>
                  <Text fontSize="sm" color={textColor} textAlign="center">
                    –ò–ò –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫ 24/7
                  </Text>
                </VStack>

                <VStack spacing={3}>
                  <Box
                    w={16}
                    h={16}
                    bg="orange.500"
                    borderRadius="full"
                    display="flex"
                    alignItems="center"
                    justifyContent="center"
                    color="white"
                    fontSize="2xl"
                    fontWeight="bold"
                  >
                    4
                  </Box>
                  <Heading size="sm" textAlign="center">–ü—Ä–∏–±—ã–ª—å</Heading>
                  <Text fontSize="sm" color={textColor} textAlign="center">
                    –ü–æ–ª—É—á–∞–µ—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂ –∏ –ø—Ä–∏–±—ã–ª–∏ –Ω–∞ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–µ
                  </Text>
                </VStack>
              </SimpleGrid>
            </Box>
          </VStack>
        </Box>
      </Container>
    </Box>
  );
};

export default HomePage;
