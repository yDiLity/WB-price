/**
 * üîó –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Wildberries
 * –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ API WB
 */

interface WBApiCredentials {
  apiKey: string;
  supplierId: string;
  isValid: boolean;
}

interface WBApiConfig {
  baseUrl: string;
  timeout: number;
  retryAttempts: number;
}

class WBApiService {
  private credentials: WBApiCredentials | null = null;
  private config: WBApiConfig = {
    baseUrl: 'https://suppliers-api.wildberries.ru',
    timeout: 30000,
    retryAttempts: 3
  };

  /**
   * üîë –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
   */
  initialize(credentials: WBApiCredentials): void {
    this.credentials = credentials;
    console.log('üîó WB API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API
   */
  isInitialized(): boolean {
    return this.credentials !== null && this.credentials.isValid;
  }

  /**
   * üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
   */
  async getProducts(): Promise<any[]> {
    if (!this.isInitialized()) {
      throw new Error('WB API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    try {
      const response = await this.makeRequest('/api/v1/supplier/incomes');
      return response.data || [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error);
      return [];
    }
  }

  /**
   * üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤
   */
  async getPrices(articleNumbers: string[]): Promise<any[]> {
    if (!this.isInitialized()) {
      throw new Error('WB API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    try {
      const response = await this.makeRequest('/public/api/v1/info', {
        method: 'POST',
        body: JSON.stringify({ quantity: 0 })
      });
      return response.data || [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω:', error);
      return [];
    }
  }

  /**
   * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
   */
  async getSalesStats(dateFrom: string, dateTo: string): Promise<any[]> {
    if (!this.isInitialized()) {
      throw new Error('WB API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    try {
      const response = await this.makeRequest(`/api/v1/supplier/sales?dateFrom=${dateFrom}&dateTo=${dateTo}`);
      return response.data || [];
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      return [];
    }
  }

  /**
   * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
   */
  async updatePrice(articleNumber: string, price: number): Promise<boolean> {
    if (!this.isInitialized()) {
      throw new Error('WB API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    try {
      const response = await this.makeRequest('/public/api/v1/prices', {
        method: 'POST',
        body: JSON.stringify([{
          nmId: articleNumber,
          price: price
        }])
      });
      
      return response.success || false;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã:', error);
      return false;
    }
  }

  /**
   * üåê –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
   */
  private async makeRequest(endpoint: string, options: RequestInit = {}): Promise<any> {
    if (!this.credentials) {
      throw new Error('API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    const url = `${this.config.baseUrl}${endpoint}`;
    
    const defaultHeaders = {
      'Authorization': this.credentials.apiKey,
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    };

    const requestOptions: RequestInit = {
      ...options,
      headers: {
        ...defaultHeaders,
        ...options.headers
      },
      timeout: this.config.timeout
    };

    let lastError: Error | null = null;

    // –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
    for (let attempt = 1; attempt <= this.config.retryAttempts; attempt++) {
      try {
        console.log(`üîó WB API –∑–∞–ø—Ä–æ—Å (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}): ${endpoint}`);
        
        const response = await fetch(url, requestOptions);
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        const data = await response.json();
        console.log(`‚úÖ WB API —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: ${endpoint}`);
        
        return data;

      } catch (error) {
        lastError = error instanceof Error ? error : new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
        console.warn(`‚ö†Ô∏è WB API –æ—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}):`, lastError.message);
        
        if (attempt < this.config.retryAttempts) {
          // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
          const delay = Math.pow(2, attempt) * 1000;
          await new Promise(resolve => setTimeout(resolve, delay));
        }
      }
    }

    throw lastError || new Error('–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—á–µ—Ä–ø–∞–Ω—ã');
  }

  /**
   * üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  updateConfig(newConfig: Partial<WBApiConfig>): void {
    this.config = { ...this.config, ...newConfig };
  }

  /**
   * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ API
   */
  getStatus(): {
    isInitialized: boolean;
    hasCredentials: boolean;
    baseUrl: string;
    supplierId?: string;
  } {
    return {
      isInitialized: this.isInitialized(),
      hasCredentials: this.credentials !== null,
      baseUrl: this.config.baseUrl,
      supplierId: this.credentials?.supplierId
    };
  }

  /**
   * üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
   */
  async testConnection(): Promise<{
    success: boolean;
    message: string;
    responseTime?: number;
  }> {
    if (!this.isInitialized()) {
      return {
        success: false,
        message: 'API –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'
      };
    }

    const startTime = Date.now();

    try {
      // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
      await this.makeRequest('/ping');
      
      const responseTime = Date.now() - startTime;
      
      return {
        success: true,
        message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ',
        responseTime
      };

    } catch (error) {
      return {
        success: false,
        message: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'
      };
    }
  }

  /**
   * üö™ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç API
   */
  disconnect(): void {
    this.credentials = null;
    console.log('üîó WB API –æ—Ç–∫–ª—é—á–µ–Ω');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton
export const wbApiService = new WBApiService();
export default WBApiService;
export type { WBApiCredentials, WBApiConfig };
