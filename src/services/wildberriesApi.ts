// üõí Wildberries API Service
// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API Wildberries –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö

import { securityService } from './securityService'

export interface WBProduct {
  nmID: number
  vendorCode: string
  brand: string
  title: string
  photos: string[]
  video: string
  dimensions: {
    length: number
    width: number
    height: number
  }
  characteristics: Array<{
    id: number
    name: string
    value: string
  }>
  sizes: Array<{
    chrtID: number
    techSize: string
    wbSize: string
    price: number
    discountedPrice: number
    qty: number
  }>
  tags: string[]
  createdAt: string
  updatedAt: string
}

export interface WBPriceInfo {
  nmId: number
  price: number
  discount: number
  promoCode: number
}

export interface WBStock {
  lastChangeDate: string
  supplierArticle: string
  techSize: string
  barcode: string
  quantity: number
  isSupply: boolean
  isRealization: boolean
  quantityFull: number
  warehouse: number
  nmId: number
  subject: string
  category: string
  brand: string
  SCCode: string
  Price: number
  Discount: number
}

class WildberriesApiService {
  private baseUrl = 'https://suppliers-api.wildberries.ru'
  private contentBaseUrl = 'https://content-api.wildberries.ru'
  private statisticsBaseUrl = 'https://statistics-api.wildberries.ru'
  private advertisingBaseUrl = 'https://advert-api.wildberries.ru'

  private apiKey: string | null = null

  constructor() {
    // –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ localStorage –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    this.apiKey = localStorage.getItem('wb_api_key') || import.meta.env.VITE_WB_API_KEY || null
  }

  // üîë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–ª—é—á–∞
  setApiKey(key: string) {
    this.apiKey = key
    localStorage.setItem('wb_api_key', key)
  }

  // üîë –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞
  getApiKey(): string | null {
    return this.apiKey
  }

  // üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞
  hasApiKey(): boolean {
    return !!this.apiKey
  }

  // üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  async getProducts(limit = 100, offset = 0): Promise<WBProduct[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ WB —á–µ—Ä–µ–∑ securityService')
      const response = await securityService.secureRequest(`${this.contentBaseUrl}/content/v1/cards/cursor/list`, {
        method: 'POST',
        headers: {
          'Authorization': this.apiKey,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          sort: {
            cursor: {
              limit: limit,
              offset: offset
            },
            filter: {
              withPhoto: -1
            }
          }
        })
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data.data?.cards || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error)
      throw error
    }
  }

  // üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö
  async getPrices(): Promise<WBPriceInfo[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ü–µ–Ω WB —á–µ—Ä–µ–∑ securityService')
      const response = await securityService.secureRequest(`${this.baseUrl}/public/api/v1/info`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω:', error)
      throw error
    }
  }

  // üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
  async getStocks(dateFrom?: string): Promise<WBStock[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const params = new URLSearchParams()
      if (dateFrom) {
        params.append('dateFrom', dateFrom)
      }

      const response = await fetch(`${this.baseUrl}/api/v3/stocks/${params.toString() ? '?' + params.toString() : ''}`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤:', error)
      throw error
    }
  }

  // üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤
  async updatePrices(prices: Array<{ nmId: number; price: number }>): Promise<boolean> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/public/api/v1/prices`, {
        method: 'POST',
        headers: {
          'Authorization': this.apiKey,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(prices)
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      return true
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω:', error)
      throw error
    }
  }

  // üìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
  async getSalesStatistics(dateFrom: string, dateTo: string): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.statisticsBaseUrl}/api/v1/supplier/sales?dateFrom=${dateFrom}&dateTo=${dateTo}`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
      throw error
    }
  }

  // üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ - –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä!
  async searchCompetitorProducts(query: string): Promise<any[]> {
    try {
      console.log('üõ°Ô∏è –†–ï–ê–õ–¨–ù–´–ô –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ WB —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏')

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
      const response = await fetch(`/api/wb/search?q=${encodeURIComponent(query)}`)

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${response.status}`)
      }

      const products = await response.json()
      console.log('‚úÖ –†–ï–ê–õ–¨–ù–´–ô –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä:', products.length)
      return products
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:', error)
      throw error
    }
  }

  // üè™ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–ª–∞–¥–∞—Ö
  async getWarehouses(): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/api/v3/warehouses`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤:', error)
      throw error
    }
  }

  // üöö –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö
  async getSupplies(): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/api/v3/supplies`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫:', error)
      throw error
    }
  }

  // üìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø—Ä–µ–¥–º–µ—Ç–æ–≤) –∏–∑ API
  async getCategories(): Promise<any[]> {
    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π WB —á–µ—Ä–µ–∑ securityService')

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const response = await securityService.secureRequest(`${this.contentBaseUrl}/content/v2/directory/tnved`, {
        headers: {
          'Authorization': this.apiKey || '',
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', data)
      return data || []
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error)
      throw error
    }
  }

  // üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (subjects)
  async getSubjects(): Promise<any[]> {
    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ WB —á–µ—Ä–µ–∑ securityService')

      const response = await securityService.secureRequest(`${this.contentBaseUrl}/content/v2/object/all`, {
        headers: {
          'Authorization': this.apiKey || '',
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', data)
      return data || []
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤:', error)
      throw error
    }
  }

  // üè∑Ô∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
  async getCharacteristics(subjectId: number): Promise<any[]> {
    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ WB —á–µ—Ä–µ–∑ securityService')

      const response = await securityService.secureRequest(`${this.contentBaseUrl}/content/v2/object/charcs/${subjectId}`, {
        headers: {
          'Authorization': this.apiKey || '',
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      console.log('‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', data)
      return data || []
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫:', error)
      throw error
    }
  }

  // üåê –ü–£–ë–õ–ò–ß–ù–û–ï API WILDBERRIES (–ë–ï–ó –ö–õ–Æ–ß–ê)

  // üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–µ –ø–æ ID (–ø—É–±–ª–∏—á–Ω–æ–µ API) - –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä!
  async getPublicProductById(productId: number): Promise<any> {
    try {
      console.log('üåê –†–ï–ê–õ–¨–ù–´–ô –∑–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–∞ WB –ø–æ ID —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏:', productId)

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS
      const response = await fetch(`/api/wb/product/${productId}`)

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ API: ${response.status}`)
      }

      const product = await response.json()
      console.log('‚úÖ –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä:', product.name)
      return product
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:', error)
      throw error
    }
  }

  // üîç –ü—É–±–ª–∏—á–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ - –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä!
  async publicSearchProducts(query: string, page: number = 1): Promise<any[]> {
    try {
      console.log('üåê –†–ï–ê–õ–¨–ù–´–ô –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ WB —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏:', query)

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS
      const response = await fetch(`/api/wb/search?q=${encodeURIComponent(query)}&page=${page}`)

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: ${response.status}`)
      }

      const products = await response.json()
      console.log('‚úÖ –†–ï–ê–õ–¨–ù–´–ô –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä: –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', products.length)
      return products
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', error)
      throw error
    }
  }

  // üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø—É–±–ª–∏—á–Ω–æ–µ API)
  async getPublicCategoryData(categoryId: number): Promise<any> {
    try {
      console.log('üåê –ü—É–±–ª–∏—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ WB:', categoryId)

      const url = `https://catalog.wb.ru/catalog/${categoryId}/catalog?appType=1&curr=rub&dest=-1257786&sort=popular&spp=0`

      const response = await securityService.secureRequest(url, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          'Accept-Language': 'ru-RU,ru;q=0.9',
          'Accept': 'application/json, text/plain, */*',
          'Referer': 'https://www.wildberries.ru/'
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${response.status}`)
      }

      const data = await response.json()
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã')
      return data
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error)
      throw error
    }
  }

  // üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω (–ø—É–±–ª–∏—á–Ω–æ–µ API)
  async getPublicPriceHistory(productId: number): Promise<any> {
    try {
      console.log('üåê –ü—É–±–ª–∏—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω WB:', productId)

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–µ
      const productData = await this.getPublicProductById(productId)

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–µ (–∏—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏)
      return {
        currentPrice: productData.price,
        originalPrice: productData.originalPrice,
        discount: productData.discount,
        lastUpdated: new Date().toISOString(),
        // –î–ª—è –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥
        history: []
      }
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω:', error)
      throw error
    }
  }

  // üè™ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ (–ø—É–±–ª–∏—á–Ω–æ–µ API)
  async getPublicSellerInfo(sellerId: number): Promise<any> {
    try {
      console.log('üåê –ü—É–±–ª–∏—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ WB:', sellerId)

      const url = `https://card.wb.ru/cards/detail?nm=${sellerId}`

      const response = await securityService.secureRequest(url, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          'Accept-Language': 'ru-RU,ru;q=0.9',
          'Accept': 'application/json, text/plain, */*',
          'Referer': 'https://www.wildberries.ru/'
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–∞: ${response.status}`)
      }

      const data = await response.json()
      const product = data.data?.products?.[0]

      if (product) {
        return {
          supplierId: product.supplierId,
          supplier: product.supplier,
          supplierRating: product.supplierRating,
          supplierFlags: product.supplierFlags || 0
        }
      }

      throw new Error('–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ:', error)
      throw error
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
export const wildberriesApi = new WildberriesApiService()
export default wildberriesApi
