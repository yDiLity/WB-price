// üõí Wildberries API Service
// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API Wildberries –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö

import { securityService } from './securityService'

export interface WBProduct {
  nmID: number
  vendorCode: string
  brand: string
  title: string
  photos: string[]
  video: string
  dimensions: {
    length: number
    width: number
    height: number
  }
  characteristics: Array<{
    id: number
    name: string
    value: string
  }>
  sizes: Array<{
    chrtID: number
    techSize: string
    wbSize: string
    price: number
    discountedPrice: number
    qty: number
  }>
  tags: string[]
  createdAt: string
  updatedAt: string
}

export interface WBPriceInfo {
  nmId: number
  price: number
  discount: number
  promoCode: number
}

export interface WBStock {
  lastChangeDate: string
  supplierArticle: string
  techSize: string
  barcode: string
  quantity: number
  isSupply: boolean
  isRealization: boolean
  quantityFull: number
  warehouse: number
  nmId: number
  subject: string
  category: string
  brand: string
  SCCode: string
  Price: number
  Discount: number
}

class WildberriesApiService {
  private baseUrl = 'https://suppliers-api.wildberries.ru'
  private contentBaseUrl = 'https://content-api.wildberries.ru'
  private statisticsBaseUrl = 'https://statistics-api.wildberries.ru'
  private advertisingBaseUrl = 'https://advert-api.wildberries.ru'

  private apiKey: string | null = null

  constructor() {
    // –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ localStorage –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    this.apiKey = localStorage.getItem('wb_api_key') || import.meta.env.VITE_WB_API_KEY || null
  }

  // üîë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–ª—é—á–∞
  setApiKey(key: string) {
    this.apiKey = key
    localStorage.setItem('wb_api_key', key)
  }

  // üîë –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞
  getApiKey(): string | null {
    return this.apiKey
  }

  // üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞
  hasApiKey(): boolean {
    return !!this.apiKey
  }

  // üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  async getProducts(limit = 100, offset = 0): Promise<WBProduct[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ WB —á–µ—Ä–µ–∑ securityService')
      const response = await securityService.secureRequest(`${this.contentBaseUrl}/content/v1/cards/cursor/list`, {
        method: 'POST',
        headers: {
          'Authorization': this.apiKey,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          sort: {
            cursor: {
              limit: limit,
              offset: offset
            },
            filter: {
              withPhoto: -1
            }
          }
        })
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data.data?.cards || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error)
      throw error
    }
  }

  // üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö
  async getPrices(): Promise<WBPriceInfo[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ü–µ–Ω WB —á–µ—Ä–µ–∑ securityService')
      const response = await securityService.secureRequest(`${this.baseUrl}/public/api/v1/info`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω:', error)
      throw error
    }
  }

  // üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
  async getStocks(dateFrom?: string): Promise<WBStock[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const params = new URLSearchParams()
      if (dateFrom) {
        params.append('dateFrom', dateFrom)
      }

      const response = await fetch(`${this.baseUrl}/api/v3/stocks/${params.toString() ? '?' + params.toString() : ''}`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤:', error)
      throw error
    }
  }

  // üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤
  async updatePrices(prices: Array<{ nmId: number; price: number }>): Promise<boolean> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/public/api/v1/prices`, {
        method: 'POST',
        headers: {
          'Authorization': this.apiKey,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(prices)
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      return true
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω:', error)
      throw error
    }
  }

  // üìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
  async getSalesStatistics(dateFrom: string, dateTo: string): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.statisticsBaseUrl}/api/v1/supplier/sales?dateFrom=${dateFrom}&dateTo=${dateTo}`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
      throw error
    }
  }

  // üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ (–ø—É–±–ª–∏—á–Ω—ã–π API) - –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–ù–û –î–õ–Ø –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò!
  async searchCompetitorProducts(query: string): Promise<any[]> {
    try {
      console.log('üõ°Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ WB —á–µ—Ä–µ–∑ securityService')
      console.log('üîí –ü—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –í–°–ï –∑–∞—â–∏—Ç—ã: –ø—Ä–æ–∫—Å–∏, –∑–∞–¥–µ—Ä–∂–∫–∏, User-Agent, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ')

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –ø–æ–∏—Å–∫ WB (–±–µ–∑ API –∫–ª—é—á–∞) —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ—Ä–≤–∏—Å
      const url = `https://search.wb.ru/exactmatch/ru/common/v4/search?appType=1&curr=rub&dest=-1257786&query=${encodeURIComponent(query)}&resultset=catalog&sort=popular&spp=0&suppressSpellcheck=false`
      const response = await securityService.secureRequest(url)

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${response.status}`)
      }

      const data = await response.json()
      console.log('‚úÖ –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ')
      return data.data?.products || []
    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:', error)
      throw error
    }
  }

  // üè™ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–ª–∞–¥–∞—Ö
  async getWarehouses(): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/api/v3/warehouses`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤:', error)
      throw error
    }
  }

  // üöö –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö
  async getSupplies(): Promise<any[]> {
    if (!this.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    try {
      const response = await fetch(`${this.baseUrl}/api/v3/supplies`, {
        headers: {
          'Authorization': this.apiKey,
        }
      })

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`)
      }

      const data = await response.json()
      return data || []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫:', error)
      throw error
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
export const wildberriesApi = new WildberriesApiService()
export default wildberriesApi
